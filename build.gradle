/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
  // Apply the application plugin to add support for building a CLI application in Java.
  id 'application'

  // Apply the Jacoco plugin to add suppport for JUnit test coverage reports.
  id 'jacoco'
}

// Build and run the project with Java 16
java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(16)
  }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
  // Add the JSON-Java dependency
  implementation 'org.json:json:20210307'

  // Use JUnit test framework.
  testImplementation 'junit:junit:4.13.2'
}

application {
  // Define the main class for the application.
  mainClass = 'xrate.Main'
}

run {
  standardInput = System.in
}

test {
  testLogging {
    events "passed", "skipped", "failed" //, "standardOut", "standardError"

    showExceptions true
    exceptionFormat "full"
    showCauses true
    // showStackTraces true

    showStandardStreams = false
  }

  // After running the tests, generate a coverage report
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  // Running the test report task automatically runs test first
  dependsOn test

  reports {
    // This isn't strictly necessary, but the default reports
    // location is buried pretty deep in the build directory,
    // so this makes it easier to find.
    html.destination file("${buildDir}/jacocoHtml")
  }
}

wrapper {
  distributionType = Wrapper.DistributionType.ALL
}